name: 'Create PR Container'

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [ main , staging, master ]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true

defaults:
  run:
    shell: pwsh

permissions:
  actions: read
  contents: read
  id-token: write
  pull-requests: read

jobs:
  Initialization:
    needs: [ ]
    if: (!failure() && !cancelled())
    runs-on: [ windows-latest ]
    outputs:    
      githubRunner: ${{ steps.ReadSettings.outputs.GitHubRunnerJson }}
      githubRunnerShell: ${{ steps.ReadSettings.outputs.GitHubRunnerShell }}
      telemetryScopeJson: ${{ steps.init.outputs.telemetryScopeJson }}
      containerUsername: ${{ steps.DetermineContainerSettings.outputs.containerUsername }}
      containerPassword: ${{ steps.DetermineContainerSettings.outputs.containerPassword }}
      bcLicense: ${{ steps.DetermineContainerSettings.outputs.bcLicense }}
      bcVersion: ${{ steps.DetermineContainerSettings.outputs.bcVersion }}
    steps:
      - name: Dump Workflow Information
        uses: microsoft/AL-Go-Actions/DumpWorkflowInfo@v7.2
        with:
          shell: powershell

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          lfs: true
          ref: ${{ github.event_name == 'pull_request' && github.sha || format('refs/pull/{0}/merge', github.event.pull_request.number) }}

      - name: Initialize the workflow
        id: init
        uses: microsoft/AL-Go-Actions/WorkflowInitialize@v7.2
        with:
          shell: powershell

      - name: Read settings
        id: ReadSettings
        uses: TRASER-Software-GmbH/AL-Go-Actions/ReadSettings@main
        with:
          shell: powershell
          get: containerUsername,containerPassword,bcLicense,bcVersion

      - name: Determine Container Settings
        id: DetermineContainerSettings
        run: |
          Add-Content -Encoding UTF8 -Path $env:GITHUB_OUTPUT -Value "containerUsername=$($env:containerUsername)"
          Add-Content -Encoding UTF8 -Path $env:GITHUB_OUTPUT -Value "containerPassword=$($env:containerPassword)"
          Add-Content -Encoding UTF8 -Path $env:GITHUB_OUTPUT -Value "bcLicense=$($env:bcLicense)"
          Add-Content -Encoding UTF8 -Path $env:GITHUB_OUTPUT -Value "bcVersion=$($env:bcVersion)"

  CreatePRContainer:
    needs: [ Initialization ]
    if: (!failure() && !cancelled())
    runs-on: [ self-hosted ]
    steps:
    - name: Create PR Container
      id: CreatePRContainer
      uses: TRASER-Software-GmbH/AL-Go-Actions/CreatePRContainer@main
      with:
        shell: ${{ needs.Initialization.outputs.githubRunnerShell }}
        runs-on: ${{ needs.Initialization.outputs.githubRunner }}
        pullRequestNumber: ${{ github.event.pull_request.number }}
        containerUsername: ${{ needs.Initialization.outputs.containerUsername }}
        containerPassword: ${{ needs.Initialization.outputs.containerPassword }}
        bcLicense: ${{ needs.Initialization.outputs.bcLicense }}
        bcVersion: ${{ needs.Initialization.outputs.bcVersion }}   
        nugetFeedsToken: ${{ secrets.NUGET_FEEDS_TOKEN }}

    - name: Cleanup on Failure
      id : CleanupOnFailure
      if: failure()
      uses: TRASER-Software-GmbH/AL-Go-Actions/CleanupBCContainer@main
      with:
        shell: ${{ needs.Initialization.outputs.githubRunnerShell }}
        pullRequestNumber: ${{ github.event.pull_request.number }}